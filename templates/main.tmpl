package {{ .PackageName }}

import (
    "fmt"
    "log"
    "runtime"
    "os"
    "strings"

	"github.com/kurtmc/openapi-cli-generator/cli"
)

func main() {
    config := &cli.Config{
        AppName:   "{{ .Name }}",
        Version:   "1.0.0",
        EnvPrefix: "{{ .NameEnv }}",
    }
    cli.Init(config)

    defaults := cli.NewGlobalFlagDefaults("http://localhost:8000")
    globalFlags, globalFlagSet, err := cli.MakeAndParseGlobalFlags(defaults)
    if err != nil {
        log.Fatal(err)
    }

    // TODO: Add register commands here.

    err = cli.InitConfiguration("{{ .NameEnv }}", getTOMLFilePath("settings"), getTOMLFilePath("secrets"), globalFlags)
    if err != nil {
        log.Fatal(err)
    }

	cli.Root.AddCommand(
	    cli.BuildSettingsCommands(), cli.BuildSecretsCommands(),
	    cli.BuildHelpConfigCommand("{{ .Name }}"), cli.BuildHelpInputCommand(),
	)

    cli.Root.PersistentFlags().AddFlagSet(globalFlagSet)

	cli.Root.Execute()
}

func getTOMLFilePath(filename string) string {
    envValue := os.Getenv(strings.ToUpper(fmt.Sprintf("%s_%s_PATH", "{{ .NameEnv }}", filename)))
    if envValue != "" {
        return envValue
    }
    return fmt.Sprintf("%s/.%s/%s.toml", userHomeDir(), strings.ToLower("{{ .NameEnv }}"), filename)
}

func userHomeDir() string {
	if runtime.GOOS == "windows" {
		home := os.Getenv("HOMEDRIVE") + os.Getenv("HOMEPATH")
		if home == "" {
			home = os.Getenv("USERPROFILE")
		}
		return home
	}
	return os.Getenv("HOME")
}
